{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/code_the_dream/react-todo/code-the-dream-react/src/AddTodoForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { InputWithLabel } from './InputWithLabel.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodoForm(_ref) {\n  _s();\n  let {\n    onAddTodo\n  } = _ref;\n  const [todoTitle, setTodoTitle] = React.useState(''); // setTodoTitle in this case is sometimes called the function updater/callback handler\n\n  function handleTitleChange(event) {\n    let newTodoTitle = event.target.value;\n    setTodoTitle(newTodoTitle);\n  }\n  ;\n  function handleAddTodo(event) {\n    event.preventDefault();\n    let todoItem = {\n      title: todoTitle,\n      id: Date.now()\n    };\n    onAddTodo(todoItem);\n    setTodoTitle(''); // Note to self: can also use event.target.reset() instead of document.getElementById()                 \n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"formValue\",\n    onSubmit: handleAddTodo,\n    children: /*#__PURE__*/_jsxDEV(InputWithLabel, {\n      labTel: label,\n      todoTitle: todoTitle,\n      handleTitleChange: handleTitleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(AddTodoForm, \"HKNUvcCEMGf767k3Fe0umxuM0i4=\");\n_c = AddTodoForm;\nexport { AddTodoForm };\nvar _c;\n$RefreshReg$(_c, \"AddTodoForm\");","map":{"version":3,"names":["React","InputWithLabel","jsxDEV","_jsxDEV","AddTodoForm","_ref","_s","onAddTodo","todoTitle","setTodoTitle","useState","handleTitleChange","event","newTodoTitle","target","value","handleAddTodo","preventDefault","todoItem","title","id","Date","now","onSubmit","children","labTel","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fernanda/code_the_dream/react-todo/code-the-dream-react/src/AddTodoForm.js"],"sourcesContent":["import React from 'react';\nimport { InputWithLabel } from './InputWithLabel.js';\n\nfunction AddTodoForm({ onAddTodo }) {\n    const [todoTitle, setTodoTitle] = React.useState(''); // setTodoTitle in this case is sometimes called the function updater/callback handler\n\n    function handleTitleChange(event) {\n        let newTodoTitle = event.target.value;\n        setTodoTitle(newTodoTitle);\n    };\n\n    function handleAddTodo(event) {\n        event.preventDefault();\n        let todoItem = {\n            title: todoTitle,\n            id: Date.now(),\n            }\n        onAddTodo(todoItem);\n        setTodoTitle(''); // Note to self: can also use event.target.reset() instead of document.getElementById()                 \n    };\n    \n    return (\n        <form id=\"formValue\" onSubmit={handleAddTodo}>\n            <InputWithLabel labTel={label} todoTitle={todoTitle} handleTitleChange={handleTitleChange}/>\n        </form>\n    );\n}\n\nexport { AddTodoForm }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,WAAWA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,SAASC,iBAAiBA,CAACC,KAAK,EAAE;IAC9B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCN,YAAY,CAACI,YAAY,CAAC;EAC9B;EAAC;EAED,SAASG,aAAaA,CAACJ,KAAK,EAAE;IAC1BA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB,IAAIC,QAAQ,GAAG;MACXC,KAAK,EAAEX,SAAS;MAChBY,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IACb,CAAC;IACLf,SAAS,CAACW,QAAQ,CAAC;IACnBT,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB;EAAC;EAED,oBACIN,OAAA;IAAMiB,EAAE,EAAC,WAAW;IAACG,QAAQ,EAAEP,aAAc;IAAAQ,QAAA,eACzCrB,OAAA,CAACF,cAAc;MAACwB,MAAM,EAAEC,KAAM;MAAClB,SAAS,EAAEA,SAAU;MAACG,iBAAiB,EAAEA;IAAkB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEf;AAACxB,EAAA,CAvBQF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAyBpB,SAASA,WAAW;AAAE,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}